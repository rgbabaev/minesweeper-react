{"version":3,"sources":["ArenaCell/index.js","Arena/index.js","Hat/index.js","core/helpers.js","core/index.js","Options/index.js","App/index.js","index.js"],"names":["b","b_","lock","ArenaCell","_ref","cell","i","cellSize","onCellFlag","onCellOpen","gameState","opened","mined","flagged","react_default","a","createElement","className","closed","style","width","height","key","data-neighbor-mines","neighborMines","onClick","onContextMenu","e","preventDefault","Arena","_ref$cells","cells","size","onResetClick","tabIndex","onKeyPress","charCode","map","ArenaCell_ArenaCell","memo","Hat","minesLeftCount","timerValue","onFlagClick","onOptionsClick","uiKit_es","controls","title","Math","round","intent","getFreeRandomCell","flatBusyCells","_ref2","Object","slicedToArray","sortedBusyCells","slice","sort","freeCellsCount","length","flatTargetInFreeSpace","floor","random","reduce","acc","position","index","getMines","arena","minesCount","safeCell","mines","times","push","enlargeMapValue","getNeighborCells","_ref5","_ref6","col","row","calcHeatMap","_ref7","_ref8","arguments","undefined","forEach","genCells","clicked","heatMap","includes","Minesweeper","redrawFn","_this","this","classCallCheck","startTimer","startTime","Date","now","timerId","setInterval","_render","bind","stopTimer","endTime","clearInterval","handleCellClick","_openNeighborCells","_openCell","_explode","openedCells","minesCountTotal","minedCells","filter","cellsToOpen","x","neighborCells","apply","toConsumableArray","some","item","_ref3","_ref4","flagCell","flaggedCells","reset","createClass","value","_ref9","adjustMinesCount","w","h","m","Options","onApply","onClose","_useState","useState","_useState2","_useState2$","setState","set","parseInt","target","[object Object]","recalcValues","state","onSubmit","footerControls","type","label","name","onChange","checked","onBlur","App","props","_super","call","toggleOptions","showOptions","newGame","game","configure","forceUpdate","assertThisInitialized","_this$game$getStats","getStats","Hat_Hat","Arena_Arena","getCells","Options_Options","React","Component","rootElement","document","getElementById","ReactDOM","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.a3a60bdd.chunk.js","sourcesContent":["import React from \"react\";\nimport b_ from \"b_\";\nimport \"./styles.css\";\n\nconst b = b_.lock(\"ArenaCell\");\n\nexport const ArenaCell = ({\n  cell,\n  i,\n  cellSize,\n  onCellFlag,\n  onCellOpen,\n  gameState\n}) => {\n  const opened = cell.opened || (gameState === \"lost\" && ((cell.mined && !cell.flagged) || (!cell.mined && cell.flagged)));\n\n  return (\n    <div\n      className={b({ opened: opened, closed: !opened })}\n      style={{ width: cellSize, height: cellSize }}\n      key={i}\n      data-neighbor-mines={cell.neighborMines}\n      onClick={() => onCellOpen(i)}\n      onContextMenu={e => {\n        e.preventDefault();\n        onCellFlag(i);\n      }}\n    >\n      {opened\n        ? cell.mined\n          ? \"💣\"\n          : cell.flagged && gameState === \"lost\" ? \"❌\" : cell.neighborMines\n        : cell.flagged || gameState === \"won\"\n          ? \"🚩\"\n          : null}\n    </div>\n  );\n};\n","import React, { memo } from \"react\";\nimport b_ from \"b_\";\nimport { ArenaCell } from '../ArenaCell';\nimport \"./styles.css\";\n\nconst b = b_.lock(\"Arena\");\nconst cellSize = 28;\n\nexport const Arena = ({\n  cells = [],\n  size,\n  onCellFlag,\n  onCellOpen,\n  gameState,\n  onResetClick\n}) => (\n  <div\n    className={b()}\n    tabIndex={0}\n    onKeyPress={e => e.charCode === 32 && onResetClick()}\n  >\n    <div\n      className={b('inner')}\n      style={{\n        width: size[0] * cellSize,\n        height: size[1] * cellSize\n      }}\n    >\n      {cells.map((cell, i) => {\n        return (\n          <ArenaCell\n            cell={cell}\n            cellSize={cellSize}\n            i={i}\n            key={i}\n            onCellOpen={onCellOpen}\n            onCellFlag={onCellFlag}\n            gameState={gameState}\n          />\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport const PureArena = memo(Arena);\n","import React from \"react\";\nimport {\n  Button,\n  ControlsPanel,\n  Switcher,\n  Text\n} from '@tarantool.io/ui-kit';\nimport b_ from 'b_';\nimport './styles.css';\n\nconst b = b_.lock('Hat');\n\nexport const Hat = ({\n  gameState,\n  minesLeftCount,\n  timerValue,\n  onFlagClick,\n  onOptionsClick,\n  onResetClick\n}) => (\n  <ControlsPanel\n    className={b()}\n    controls={[\n      <Text className={b('output')} title='Mines counter'>💣{minesLeftCount}</Text>,\n      <Text className={b('output')} title='Timer'>⏱{timerValue === null ? 0 : Math.round(timerValue / 1000)}</Text>,\n      <Button onClick={onResetClick} title='New game' intent={gameState === 'playing' ? 'secondary' : 'primary'}>\n        {gameState === \"playing\" ? \"🙂\" : gameState === \"won\" ? \"😎\" : \"😵\"}\n        New game\n      </Button>,\n      <Switcher onClick={onFlagClick} title=\"Flag\">Flag</Switcher>,\n      <Button onClick={onOptionsClick} title=\"Options\">Options</Button>\n    ]}\n  />\n);\n","import { times } from \"ramda\";\n\nexport function getFreeRandomCell([width, height], flatBusyCells) {\n  const sortedBusyCells = flatBusyCells\n    .slice(0)\n    .sort((a, b) => (a > b ? 1 : -1));\n  const freeCellsCount = width * height - sortedBusyCells.length;\n  const flatTargetInFreeSpace = Math.floor(Math.random() * freeCellsCount);\n\n  const blockedCellsLeft = sortedBusyCells.reduce((acc, position, index) => {\n    const freeCellsLeft = position - index;\n    return freeCellsLeft <= flatTargetInFreeSpace ? index + 1 : acc;\n  }, 0);\n\n  return blockedCellsLeft + flatTargetInFreeSpace;\n}\n\nexport function getFreeRandomCellXY(arena, busyCells) {\n  const arenaWidth = arena[0];\n  const flatBusyCells = busyCells.map(([x, y]) => y * arenaWidth + x);\n  const flatTarget = getFreeRandomCell(arena, flatBusyCells);\n  return [flatTarget % arenaWidth, Math.floor(flatTarget / arenaWidth)];\n}\n\nexport const getMines = (arena, minesCount, safeCell) => {\n  const mines = [safeCell];\n  times(() => mines.push(getFreeRandomCell(arena, mines)), minesCount);\n  return mines.slice(1);\n};\n\nconst enlargeMapValue = (map, cell) => (map[cell] = (map[cell] || 0) + 1);\n\nexport const getNeighborCells = ([width, height], i) => {\n  const cells = [];\n\n  const col = i % width;\n  const row = Math.floor(i / width);\n\n  if (row > 0) {\n    if (col > 0) cells.push(i - width - 1);\n    cells.push(i - width);\n    if (col < width - 1) cells.push(i - width + 1);\n  }\n  if (col > 0) cells.push(i - 1);\n  if (col < width - 1) cells.push(i + 1);\n  if (row < height - 1) {\n    if (col > 0) cells.push(i + width - 1);\n    cells.push(i + width);\n    if (col < width - 1) cells.push(i + width + 1);\n  }\n\n  return cells;\n};\n\nexport const calcHeatMap = ([width, height], mines = []) => {\n  const map = [];\n\n  mines.forEach(cell => {\n    const col = cell % width;\n    const row = Math.floor(cell / width);\n\n    if (row > 0) {\n      if (col > 0) enlargeMapValue(map, cell - width - 1);\n      enlargeMapValue(map, cell - width);\n      if (col < width - 1) enlargeMapValue(map, cell - width + 1);\n    }\n    if (col > 0) enlargeMapValue(map, cell - 1);\n    if (col < width - 1) enlargeMapValue(map, cell + 1);\n    if (row < height - 1) {\n      if (col > 0) enlargeMapValue(map, cell + width - 1);\n      enlargeMapValue(map, cell + width);\n      if (col < width - 1) enlargeMapValue(map, cell + width + 1);\n    }\n  });\n\n  return map;\n};\n\nexport function genCells(arena, minesCount, clicked) {\n  const mines = getMines(arena, minesCount, clicked);\n  const heatMap = calcHeatMap(arena, mines);\n\n  return times(\n    i => ({\n      mined: mines.includes(i),\n      neighborMines: heatMap[i],\n      flagged: false,\n      opened: false\n    }),\n    arena[0] * arena[1]\n  );\n}\n\nexport function arraysCompare(a, b) {\n  if (a.length !== b.length) return false;\n\n  return !a.some((item, i) => b[i] !== item);\n}\n","import { arraysCompare, genCells, getNeighborCells } from \"./helpers\";\n\nexport class Minesweeper {\n  constructor(arena, minesCount, redrawFn) {\n    this.redrawFn = redrawFn;\n    this.arena = arena || [9, 9];\n    this.minesCountTotal = minesCount || 10;\n    this.reset();\n  }\n\n  configure(arena, minesCount) {\n    this.arena = arena;\n    this.minesCountTotal = minesCount;\n    this.reset();\n  }\n\n  startTimer = () => {\n    this.startTime = Date.now();\n    this.timerId = setInterval(this._render.bind(this), 1000);\n  };\n\n  stopTimer = () => {\n    this.endTime = Date.now();\n    clearInterval(this.timerId);\n  };\n\n  handleCellClick = i => {\n    if (this.gameState !== \"playing\") return;\n\n    const cell = this.cells[i];\n\n    if (cell.flagged) return;\n\n    if (cell.opened) this._openNeighborCells(i);\n    else this._openCell(i);\n    this._render();\n  };\n\n  _explode = i => {\n    this.gameState = \"lost\";\n    this.endTime = Date.now();\n  };\n\n  _openCell = i => {\n    const cell = this.cells[i];\n\n    if (this.openedCells === 0) {\n      this.cells = genCells(this.arena, this.minesCountTotal, i);\n      this.minedCells = this.cells.filter(({ mined }) => mined);\n      this.startTimer();\n    }\n    if (cell.mined) {\n      this._explode(i);\n    } else if (!cell.opened) {\n      let cellsToOpen = [i];\n\n      for (let x = 0; x < cellsToOpen.length; x++) {\n        if (!this.cells[cellsToOpen[x]].neighborMines) {\n          const neighborCells = getNeighborCells(\n            this.arena,\n            cellsToOpen[x]\n          ).filter(i => !cellsToOpen.includes(i));\n\n          cellsToOpen.push(...neighborCells);\n        }\n      }\n\n      cellsToOpen.forEach(i => {\n        this.cells[i].opened = true;\n        this.openedCells++;\n      });\n\n      const openedCells = this.cells.filter(({ opened }) => !opened);\n\n      if (arraysCompare(this.minedCells, openedCells)) {\n        this.gameState = \"won\";\n        this.stopTimer();\n      }\n    }\n  };\n\n  _openNeighborCells = i => {\n    const cell = this.cells[i];\n    if (!cell.mined) {\n      const neighborCells = getNeighborCells(this.arena, i);\n      const flaggedNeighborsCount = neighborCells\n        .map(i => this.cells[i])\n        .filter(({ flagged }) => !!flagged).length;\n\n      if (flaggedNeighborsCount === cell.neighborMines) {\n        neighborCells\n          .map(i => [i, this.cells[i]])\n          .filter(([i, cell]) => !cell.flagged)\n          .forEach(([i]) => this._openCell(i));\n      }\n    }\n  };\n\n  flagCell = i => {\n    if (this.gameState !== \"playing\") return;\n\n    const cell = this.cells[i];\n    if (!cell.opened) {\n      cell.flagged = !cell.flagged;\n      cell.flagged ? this.flaggedCells++ : this.flaggedCells--;\n    }\n    this._render();\n  };\n\n  getCells() {\n    return this.cells;\n  }\n\n  _countFlaggedCells() {\n    return this.cells.filter(({ flagged }) => flagged === true).length;\n  }\n\n  _countOpenedCells() {\n    return this.cells.filter(({ opened }) => opened === true).length;\n  }\n\n  getStats() {\n    return {\n      gameState: this.gameState,\n      arena: this.arena,\n      minesCountTotal: this.minesCountTotal,\n      opened: this.openedCells,\n      flagged: this.flaggedCells,\n      timerValue: this.startTime ? (this.endTime || Date.now()) - this.startTime : null,\n      endTime: this.endTime\n    };\n  }\n\n  reset = () => {\n    this.stopTimer();\n    this.openedCells = 0;\n    this.flaggedCells = 0;\n    this.gameState = \"playing\";\n    this.cells = genCells(this.arena, 0, 0);\n    this.minedCells = [];\n    this.startTime = null;\n    this.endTime = null;\n    this._render();\n  };\n\n  _render() {\n    this.redrawFn();\n  }\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  LabeledInput,\n  RadioButton,\n  FormField\n} from '@tarantool.io/ui-kit';\nimport b_ from 'b_';\nimport './styles.css';\n\nconst b = b_.lock('Options');\n\nconst adjustMinesCount = (w, h, m) => m >= w * h\n  ? w * h - 1\n  : m;\n\nexport const Options = ({ arena, mines, onApply, onClose }) => {\n  const [{ w, h, m }, setState] = useState({ w: arena[0], h: arena[1], m: mines });\n\n  const set = key => e => {\n    let value = parseInt(e.target.value, 10) || 0;\n    value = value > 100 ? 100 : value;\n    setState(({ w, h, m }) => ({ w, h, m, [key]: value }));\n  }\n\n  const setMines = e => {\n    const value = parseInt(e.target.value, 10) || 0;\n    setState(({ w, h }) => ({\n      w,\n      h,\n      m: adjustMinesCount(w, h, value),\n    }))\n  }\n\n  const recalcValues = () => setState(state => {\n    let { w, h, m } = state;\n    w = w < 2 ? 2 : w;\n    h = h < 2 ? 2 : h;\n    m = adjustMinesCount(w, h, m);\n\n    return { w, h, m };\n  });\n\n  return (\n    <Modal\n      title='Options'\n      onSubmit={e => {\n        e.preventDefault();\n        onApply([w, h], adjustMinesCount(w, h, m));\n        onClose();\n      }}\n      onClose={onClose}\n      footerControls={[\n        <Button type=\"button\" onClick={onClose}>Cancel</Button>,\n        <Button type=\"submit\" intent='primary'>Apply</Button>\n      ]}\n    >\n      <div className={b('inner')}>\n        <FormField label='Level'>\n          <RadioButton\n            name='level'\n            onChange={() => setState({ w: 9, h: 9, m: 10 })}\n            checked={w === 9 && h === 9 && m === 10 }\n          >\n            Beginner (9x9, 10 mines)\n          </RadioButton>\n          <RadioButton\n            name='level'\n            onChange={() => setState({ w: 16, h: 16, m: 40 })}\n            checked={w === 16 && h === 16 && m === 40 }\n          >\n            Intermidiate (16x16, 40 mines)\n          </RadioButton>\n          <RadioButton\n            name='level'\n            onChange={() => setState({ w: 30, h: 16, m: 99 })}\n            checked={w === 30 && h === 16 && m === 99 }\n          >\n            Expert (30x16, 99 mines)\n          </RadioButton>\n        </FormField>\n        <div className={b('inputs')}>\n          <LabeledInput className={b('labeledInput')} onBlur={recalcValues} label='Width' value={w} onChange={set('w')} />\n          <LabeledInput className={b('labeledInput')} onBlur={recalcValues} label='Height' value={h} onChange={set('h')} />\n          <LabeledInput className={b('labeledInput')} onBlur={recalcValues} label='Mines' value={m} onChange={setMines} />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { Arena } from \"../Arena\";\nimport { Hat } from \"../Hat\";\nimport { Minesweeper } from \"../core\";\nimport { Options } from \"../Options\";\nimport \"./styles.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showOptions: false\n    };\n\n    this.game = new Minesweeper(null, null, this.forceUpdate.bind(this));\n  }\n\n  toggleOptions = () =>\n    this.setState(({ showOptions }) => ({ showOptions: !showOptions }));\n\n  newGame = (arena = [10, 10], mines = 25) => this.game.configure(arena, mines);\n\n  render() {\n    const { gameState, minesCountTotal, arena, flagged, timerValue } = this.game.getStats();\n    const { showOptions } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Hat\n          gameState={gameState}\n          timerValue={timerValue}\n          minesLeftCount={minesCountTotal - flagged}\n          onResetClick={this.game.reset}\n          onOptionsClick={this.toggleOptions}\n        />\n        <Arena\n          gameState={gameState}\n          size={arena}\n          cells={this.game.getCells()}\n          onCellOpen={this.game.handleCellClick}\n          onCellFlag={this.game.flagCell}\n          onResetClick={this.game.reset}\n        />\n        {showOptions && (\n          <Options\n            onApply={this.newGame}\n            onClose={this.toggleOptions}\n            arena={arena}\n            mines={minesCountTotal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}